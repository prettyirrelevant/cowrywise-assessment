# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""

import grpc
import warnings

from pagekeeper.protos import pagekeeper_pb2 as pagekeeper_dot_protos_dot_pagekeeper__pb2

GRPC_GENERATED_VERSION = '1.66.1'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower

    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in pagekeeper/protos/pagekeeper_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class PageKeeperStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Register = channel.unary_unary(
            '/pagekeeper.PageKeeper/Register',
            request_serializer=pagekeeper_dot_protos_dot_pagekeeper__pb2.RegisterRequest.SerializeToString,
            response_deserializer=pagekeeper_dot_protos_dot_pagekeeper__pb2.RegisterResponse.FromString,
            _registered_method=True,
        )
        self.Authenticate = channel.unary_unary(
            '/pagekeeper.PageKeeper/Authenticate',
            request_serializer=pagekeeper_dot_protos_dot_pagekeeper__pb2.AuthenticateRequest.SerializeToString,
            response_deserializer=pagekeeper_dot_protos_dot_pagekeeper__pb2.AuthenticateResponse.FromString,
            _registered_method=True,
        )
        self.Verify = channel.unary_unary(
            '/pagekeeper.PageKeeper/Verify',
            request_serializer=pagekeeper_dot_protos_dot_pagekeeper__pb2.VerifyRequest.SerializeToString,
            response_deserializer=pagekeeper_dot_protos_dot_pagekeeper__pb2.VerifyResponse.FromString,
            _registered_method=True,
        )
        self.FetchUsers = channel.unary_unary(
            '/pagekeeper.PageKeeper/FetchUsers',
            request_serializer=pagekeeper_dot_protos_dot_pagekeeper__pb2.FetchUsersRequest.SerializeToString,
            response_deserializer=pagekeeper_dot_protos_dot_pagekeeper__pb2.FetchUsersResponse.FromString,
            _registered_method=True,
        )


class PageKeeperServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Register(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Authenticate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Verify(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FetchUsers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PageKeeperServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'Register': grpc.unary_unary_rpc_method_handler(
            servicer.Register,
            request_deserializer=pagekeeper_dot_protos_dot_pagekeeper__pb2.RegisterRequest.FromString,
            response_serializer=pagekeeper_dot_protos_dot_pagekeeper__pb2.RegisterResponse.SerializeToString,
        ),
        'Authenticate': grpc.unary_unary_rpc_method_handler(
            servicer.Authenticate,
            request_deserializer=pagekeeper_dot_protos_dot_pagekeeper__pb2.AuthenticateRequest.FromString,
            response_serializer=pagekeeper_dot_protos_dot_pagekeeper__pb2.AuthenticateResponse.SerializeToString,
        ),
        'Verify': grpc.unary_unary_rpc_method_handler(
            servicer.Verify,
            request_deserializer=pagekeeper_dot_protos_dot_pagekeeper__pb2.VerifyRequest.FromString,
            response_serializer=pagekeeper_dot_protos_dot_pagekeeper__pb2.VerifyResponse.SerializeToString,
        ),
        'FetchUsers': grpc.unary_unary_rpc_method_handler(
            servicer.FetchUsers,
            request_deserializer=pagekeeper_dot_protos_dot_pagekeeper__pb2.FetchUsersRequest.FromString,
            response_serializer=pagekeeper_dot_protos_dot_pagekeeper__pb2.FetchUsersResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler('pagekeeper.PageKeeper', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('pagekeeper.PageKeeper', rpc_method_handlers)


# This class is part of an EXPERIMENTAL API.
class PageKeeper(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Register(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/pagekeeper.PageKeeper/Register',
            pagekeeper_dot_protos_dot_pagekeeper__pb2.RegisterRequest.SerializeToString,
            pagekeeper_dot_protos_dot_pagekeeper__pb2.RegisterResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def Authenticate(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/pagekeeper.PageKeeper/Authenticate',
            pagekeeper_dot_protos_dot_pagekeeper__pb2.AuthenticateRequest.SerializeToString,
            pagekeeper_dot_protos_dot_pagekeeper__pb2.AuthenticateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def Verify(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/pagekeeper.PageKeeper/Verify',
            pagekeeper_dot_protos_dot_pagekeeper__pb2.VerifyRequest.SerializeToString,
            pagekeeper_dot_protos_dot_pagekeeper__pb2.VerifyResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def FetchUsers(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/pagekeeper.PageKeeper/FetchUsers',
            pagekeeper_dot_protos_dot_pagekeeper__pb2.FetchUsersRequest.SerializeToString,
            pagekeeper_dot_protos_dot_pagekeeper__pb2.FetchUsersResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )
